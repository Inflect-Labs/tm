name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.continue-on-error || false }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: tm
            asset_name: tm-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: tm
            asset_name: tm-linux-aarch64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: tm
            asset_name: tm-macos-x86_64
            continue-on-error: true
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: tm
            asset_name: tm-macos-aarch64
            continue-on-error: true
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: tm.exe
            asset_name: tm-windows-x86_64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
          echo 'CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc' >> $GITHUB_ENV

      - name: Build binary
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Rename binary and create checksum
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          cp ${{ matrix.artifact_name }} ${{ matrix.asset_name }}
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            sha256sum ${{ matrix.asset_name }} > ${{ matrix.asset_name }}.sha256
          else
            shasum -a 256 ${{ matrix.asset_name }} > ${{ matrix.asset_name }}.sha256
          fi

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.asset_name }}

      - name: Upload checksum
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}.sha256
          path: target/${{ matrix.target }}/release/${{ matrix.asset_name }}.sha256

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && !cancelled()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List available artifacts
        run: |
          echo "Available build artifacts:"
          find artifacts -type f -name "tm*" | sort
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*/*
          body: |
            ## Installation

            ```bash
            curl -fsSL https://tm-cli.com/install | bash
            tm --version
            ```
