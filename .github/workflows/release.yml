name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: td
            asset_name: td-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: td
            asset_name: td-linux-aarch64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: td
            asset_name: td-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: td
            asset_name: td-macos-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: td.exe
            asset_name: td-windows-x86_64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
          echo 'CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc' >> $GITHUB_ENV

      - name: Build binary
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Create checksum
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cd target/${{ matrix.target }}/release
            sha256sum ${{ matrix.artifact_name }} > ${{ matrix.asset_name }}.sha256
          else
            cd target/${{ matrix.target }}/release
            shasum -a 256 ${{ matrix.artifact_name }} > ${{ matrix.asset_name }}.sha256
          fi

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

      - name: Upload checksum
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}.sha256
          path: target/${{ matrix.target }}/release/${{ matrix.asset_name }}.sha256

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Setup GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh

      - name: Create Release
        id: create_release
        run: |
          gh release create ${{ github.ref_name }} \
            --title "Release ${{ github.ref_name }}" \
            --notes "## Installation

          ### Quick Install (Recommended)
          \`\`\`bash
          curl -fsSL https://td-cli.com/install | bash
          \`\`\`

          ### Manual Installation
          1. Download the appropriate binary for your platform below
          2. Make it executable: \`chmod +x td-*\`
          3. Move to your PATH: \`sudo mv td-* /usr/local/bin/td\`

          ### Verify Installation
          \`\`\`bash
          td --version
          \`\`\`

          ## Changes
          - See commit history for detailed changes"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        run: |
          # List all downloaded artifacts for debugging
          echo "Available artifacts:"
          find artifacts -type f -name "*" | sort
          
          # Upload all files
          for file in artifacts/*/*; do
            if [ -f "$file" ]; then
              echo "Uploading: $file"
              gh release upload ${{ github.ref_name }} "$file" --clobber
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
